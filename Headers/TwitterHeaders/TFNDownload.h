//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSData, NSError, NSMutableDictionary, NSString, NSURL, TFNDownloadManager, TFNDownloadRequestFactory, TFNHTTPRequest;

@interface TFNDownload : NSObject
{
    NSURL *_URL;
    id _authContext;
    TFNDownloadRequestFactory *_requestBuilder;
    TFNHTTPRequest *_downloadRequest;
    int _starts;
    double _startTime;
    NSData *_data;
    BOOL _checkCacheOnStart;
    NSMutableDictionary *_processors;
    NSMutableDictionary *_processedObjects;
    BOOL _sendsProgressNotifications;
    NSString *_URLString;
    TFNDownloadManager *_downloadManager;
    int _type;
    int _status;
    NSError *_error;
    int _downloadSource;
    NSURL *_downloadURL;
    id _testResponse;
    NSString *_downloadFile;
    NSString *_cacheURLString;
    double _downloadStartTime;
    double _downloadEndTime;
    struct CGSize _downloadImagePixelSize;
    double _testResponseDelay;
    unsigned long long _downloadIndex;
}

+ (id)_nilReference:(inout id *)arg1 forObserver:(id)arg2 cancel:(BOOL)arg3 ifInProgress:(BOOL)arg4;
+ (id)finished:(inout id *)arg1 forObserver:(id)arg2;
+ (void)cancel:(inout id *)arg1 forObserver:(id)arg2 completeInProgress:(BOOL)arg3;
@property(readonly, nonatomic) BOOL sendsProgressNotifications; // @synthesize sendsProgressNotifications=_sendsProgressNotifications;
@property(nonatomic) unsigned long long downloadIndex; // @synthesize downloadIndex=_downloadIndex;
@property(readonly, nonatomic) NSString *cacheURLString; // @synthesize cacheURLString=_cacheURLString;
@property(readonly, nonatomic) NSString *downloadFile; // @synthesize downloadFile=_downloadFile;
@property(nonatomic) double testResponseDelay; // @synthesize testResponseDelay=_testResponseDelay;
@property(retain, nonatomic) id testResponse; // @synthesize testResponse=_testResponse;
@property(nonatomic) struct CGSize downloadImagePixelSize; // @synthesize downloadImagePixelSize=_downloadImagePixelSize;
@property(retain, nonatomic) NSURL *downloadURL; // @synthesize downloadURL=_downloadURL;
@property(readonly, nonatomic) int downloadSource; // @synthesize downloadSource=_downloadSource;
@property(nonatomic) double downloadEndTime; // @synthesize downloadEndTime=_downloadEndTime;
@property(nonatomic) double downloadStartTime; // @synthesize downloadStartTime=_downloadStartTime;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) int status; // @synthesize status=_status;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
@property(readonly, nonatomic) TFNDownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
@property(readonly, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
- (void).cxx_destruct;
- (void)_didProcessObject:(id)arg1 forKey:(id)arg2 cacheCost:(unsigned int)arg3;
- (void)_runInBackground:(id)arg1 forKey:(id)arg2 data:(id)arg3;
- (void)_processDownloadInBackground:(BOOL)arg1 checkInMemoryCache:(BOOL)arg2;
- (BOOL)_hasBackgroundProcessors;
- (CDStruct_16abe4d0)_downloadTTL;
- (void)_downloadDidComplete;
- (void)_downloadDidReceiveResponse:(id)arg1 error:(id)arg2;
- (int)compare:(id)arg1;
- (void)_readDataInBackgroundAndStartDownload;
- (void)_startDownloadWithData:(id)arg1;
- (void)startDownload;
- (id)diagnostics;
- (void)setDownloadImagePixelSizeFromImage:(id)arg1;
- (void)addImageForSize:(struct CGSize)arg1 contentMode:(int)arg2 options:(int)arg3;
- (id)imageForSize:(struct CGSize)arg1 contentMode:(int)arg2;
- (void)addProcessedObjectForKey:(id)arg1 options:(int)arg2 block:(CDUnknownBlockType)arg3;
- (id)processedObjectForKey:(id)arg1;
- (id)file;
- (id)data;
@property(readonly, nonatomic) float progress;
- (void)sendProgressNotifications;
@property(readonly, nonatomic) BOOL finished;
@property(readonly, nonatomic) BOOL running;
- (void)startForObserver:(id)arg1 selector:(SEL)arg2;
- (void)_cancel;
- (void)cancel;
- (void)start;
@property(readonly, nonatomic) NSURL *URL;
- (id)initWithDownloadManager:(id)arg1 URL:(id)arg2 URLString:(id)arg3 type:(int)arg4 downloadFile:(id)arg5 requestBuilder:(id)arg6;

@end

