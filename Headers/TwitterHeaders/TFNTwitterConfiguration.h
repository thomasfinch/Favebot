//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSCoding.h"
#import "NSCopying.h"

@class NSDate, NSDictionary, NSRegularExpression;

@interface TFNTwitterConfiguration : NSObject <NSCopying, NSCoding>
{
    NSDictionary *_mobileConfig;
    NSDictionary *_twitterAccessConfig;
    NSDictionary *_globalConfig;
    NSDate *_lastUpdatedMobileConfig;
    NSDate *_lastUpdatedGlobalConfig;
    NSRegularExpression *_twitterAccessWhiteListExpression;
}

+ (void)_refreshGlobalConfigWithAccount:(id)arg1;
+ (void)_refreshMobileConfigWithAccount:(id)arg1;
+ (void)refreshIfNecessaryWithAccount:(id)arg1;
+ (id)_configurationFile;
+ (void)_setSCurrentConfiguration:(id)arg1;
+ (id)_currentConfiguration;
+ (id)currentConfiguration;
+ (void)initialize;
+ (void)setShouldShowDataChargesPrompts:(BOOL)arg1;
+ (BOOL)shouldShowDataChargesPrompts;
+ (id)_defaultBlacklistedEmailDomains;
+ (id)_defaultNonUsernamePaths;
@property(retain, nonatomic) NSRegularExpression *twitterAccessWhiteListExpression; // @synthesize twitterAccessWhiteListExpression=_twitterAccessWhiteListExpression;
@property(retain, nonatomic) NSDate *lastUpdatedGlobalConfig; // @synthesize lastUpdatedGlobalConfig=_lastUpdatedGlobalConfig;
@property(retain, nonatomic) NSDate *lastUpdatedMobileConfig; // @synthesize lastUpdatedMobileConfig=_lastUpdatedMobileConfig;
@property(copy, nonatomic) NSDictionary *globalConfig; // @synthesize globalConfig=_globalConfig;
@property(copy, nonatomic) NSDictionary *twitterAccessConfig; // @synthesize twitterAccessConfig=_twitterAccessConfig;
@property(copy, nonatomic) NSDictionary *mobileConfig; // @synthesize mobileConfig=_mobileConfig;
- (void).cxx_destruct;
- (id)dictionaryForTwitterAccessConfigKey:(id)arg1;
- (id)stringForTwitterAccessConfigKey:(id)arg1;
- (int)integerForTwitterAccessConfigKey:(id)arg1;
- (BOOL)boolForTwitterAccessConfigKey:(id)arg1;
- (id)arrayForGlobalConfigKey:(id)arg1;
- (id)stringForGlobalConfigKey:(id)arg1 defaultValue:(id)arg2;
- (int)integerForGlobalConfigKey:(id)arg1 defaultValue:(int)arg2 minValue:(int)arg3 maxValue:(int)arg4;
- (id)arrayForMobileConfigKey:(id)arg1;
- (int)integerForMobileConfigKey:(id)arg1 defaultValue:(int)arg2 minValue:(int)arg3 maxValue:(int)arg4;
- (float)floatForMobileConfigKey:(id)arg1 defaultValue:(float)arg2 minValue:(float)arg3 maxValue:(float)arg4;
- (BOOL)boolForMobileConfigKey:(id)arg1 defaultValue:(BOOL)arg2;
- (int)deciderFractionForMobileConfigKey:(id)arg1 defaultValue:(int)arg2;
@property(readonly, nonatomic) BOOL recentlyUpdated;
- (BOOL)_needsGlobalRefresh;
- (BOOL)_needsMobileRefresh;
- (void)loadTwitterAccess;
- (void)_loadMobileConfig:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)_setupWhitelistExpression;
- (float)watchdogTimeoutResumeModeInSeconds;
- (float)watchdogTimeoutSuspendModeInSeconds;
- (float)watchdogTimeoutLaunchModeInSeconds;
- (float)watchdogTimeoutDefaultModeInSeconds;
- (float)hangTimeoutResumeModeInSeconds;
- (float)hangTimeoutSuspendModeInSeconds;
- (float)hangTimeoutLaunchModeInSeconds;
- (float)hangTimeoutDefaultModeInSeconds;
- (BOOL)disableWatchdogDetection;
- (int)oAuthMigrationMaxAttempts;
- (int)authFailureReauthThreshold;
- (BOOL)twoFactorDisabled;
- (BOOL)showSecondDegreeNotifications;
- (int)autocompleteHashtagMaxQueryMatches;
- (BOOL)disableTypeaheadPrefetchRetry;
- (BOOL)disableTypeaheadTTLShortcut;
- (int)typeaheadUserPrefetchBackoffInSeconds;
- (int)typeaheadUserPrefetchSize;
- (int)typeaheadUserPrefetchRateInSeconds;
- (int)typeaheadTopicPrefetchBackoffInSeconds;
- (int)typeaheadTopicPrefetchSize;
- (int)typeaheadTopicPrefetchRateInSeconds;
- (int)typeaheadMaxUserMatches;
- (int)typeaheadMaxRecentSearches;
- (int)typeaheadMaxQueryMatches;
- (BOOL)isAllInlineMediaWhitelisted:(id)arg1;
- (BOOL)isURLWhitelisted:(id)arg1;
- (int)expirationSeconds;
- (BOOL)isTwitterAccessEnabled;
- (id)interstitialHTMLString;
- (int)listsMaxUsersPerList;
- (int)listsMaxListsPerAccount;
- (int)listsDescriptionCharLimit;
- (int)listsNameCharLimit;
- (BOOL)rtFavSettingsEnabled;
- (BOOL)enableSelfReplies;
- (BOOL)disableInlinePhotosInstagram;
- (BOOL)supportsAgeGating;
- (BOOL)disableRatingPromptForCountryCode:(id)arg1;
- (int)rateUsPromptConsecutiveDayMin;
- (int)rateUsPromptVersion;
- (float)rateUsPromptThreshold;
- (int)addressBookImportRequestFrequency;
- (int)cacheVersion;
- (int)reportTweetUserFraction;
- (int)antispamQueryFrequency;
- (int)antispamConnectUserCount;
- (int)antispamConnectTweetCount;
- (id)phoneNumberBasedOnboardingIncludedCountryCodes;
- (BOOL)allowPhoneNumberBasedOnboarding;
- (BOOL)selectAllInvitedFriends;
- (id)blacklistedEmailDomains;
- (int)showUserBioForProfileSimilarTo;
- (int)showUserBioForOnboardingUserRecommendations;
- (int)showUserBioForDiscoverWTF;
- (id)nearbyTimelineWhitelistedCities;
- (BOOL)tweetComposeGeoHintEnabled;
- (int)tweetComposeLocationHintImpressionLimit;
- (float)geoDataProviderUpdateDuration;
- (float)geoDataProviderUpdateInterval;
- (BOOL)geoDataProviderEnabled;
- (int)spdyEnabledUserFraction;
- (id)nonUsernamePaths;
- (int)mediaURLLength;
- (int)shortenedURLLengthSecure;
- (int)shortenedURLLength;
- (id)scribeURL;
- (BOOL)retryDirectMessagesWhenStillProcessing;
- (int)directMessageMediaRenderFraction;
- (int)directMessageMediaComposeFraction;
- (BOOL)shouldScribeError;
- (BOOL)shouldScribeCrash;
- (BOOL)shouldScribeHang;
- (BOOL)shouldScribeAPICall;
- (BOOL)_shouldScribeWithSampleSize:(int)arg1;
- (float)scribeInterval;
- (BOOL)scribeEnabled;
- (float)scribeStatusLingerMaxThresholdInSeconds;
- (float)scribeStatusLingerMinThresholdInSeconds;
- (int)scribeStatusLingerFraction;
- (int)scribeHangSampleSize;
- (int)scribePerfSampleSize;
- (int)scribeErrorSampleSize;
- (int)scribeCrashSampleSize;
- (float)ptrHeaderAnimationDelay;
- (BOOL)inlineFollowTrustEmbeddedFollowState;
- (BOOL)inlineFollowUserFetchEnabled;
- (BOOL)inlineFollowEnabled;
- (int)discoverTimelineTimeoutInterval;
- (int)discoverLocalCacheTTL;
- (int)discoverCountPerQuery;
@property(readonly, nonatomic) BOOL enableMediaForwardTimelines;
- (BOOL)enableMediaFaceCropping;
- (BOOL)enableHomeTimelineConversations;
- (BOOL)enableLifelineAlertComposer;
- (BOOL)enableHighlightLifelineAlertTweet;
- (BOOL)promptbirdEnabled;

@end

