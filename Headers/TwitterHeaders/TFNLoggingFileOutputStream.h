//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "TFNLoggingDataRetrieval.h"
#import "TFNLoggingOutputStream.h"

@class NSString;

@interface TFNLoggingFileOutputStream : NSObject <TFNLoggingOutputStream, TFNLoggingDataRetrieval>
{
    struct __sFILE {
        char *_field1;
        int _field2;
        int _field3;
        short _field4;
        short _field5;
        struct __sbuf _field6;
        int _field7;
        void *_field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        struct __sbuf _field13;
        struct __sFILEX *_field14;
        int _field15;
        unsigned char _field16[3];
        unsigned char _field17[1];
        struct __sbuf _field18;
        int _field19;
        long long _field20;
    } *_logFile;
    NSString *_logFilePath;
    unsigned int _bytesWritten;
    BOOL _flushAfterEveryWrite;
    unsigned int _maxBytesPerLogFile;
    unsigned int _maxLogFiles;
    NSString *_logFilePrefix;
    NSString *_logFileDirectoryPath;
}

+ (id)defaultLogFileDirectoryPath;
@property(nonatomic) BOOL flushAfterEveryWrite; // @synthesize flushAfterEveryWrite=_flushAfterEveryWrite;
@property(readonly, copy, nonatomic) NSString *logFileDirectoryPath; // @synthesize logFileDirectoryPath=_logFileDirectoryPath;
@property(readonly, copy, nonatomic) NSString *logFilePrefix; // @synthesize logFilePrefix=_logFilePrefix;
@property(readonly, nonatomic) unsigned int maxLogFiles; // @synthesize maxLogFiles=_maxLogFiles;
@property(readonly, nonatomic) unsigned int maxBytesPerLogFile; // @synthesize maxBytesPerLogFile=_maxBytesPerLogFile;
- (void).cxx_destruct;
- (id)retrieveLoggedData:(unsigned int)arg1;
- (unsigned int)loggedDataEncoding;
- (void)flush;
- (void)outputLogInfo:(id)arg1;
- (int)permittedLoggingLevels;
- (BOOL)shouldFilterChannelsThatAreOff;
- (id)initWithLogFileDirectoryPath:(id)arg1 logFilePrefix:(id)arg2 maxLogFiles:(unsigned int)arg3 maxBytesPerLogFile:(unsigned int)arg4 error:(id *)arg5;
- (id)initWithLogFileDirectoryPath:(id)arg1 logFilePrefix:(id)arg2 maxLogFiles:(unsigned int)arg3 maxBytesPerLogFile:(unsigned int)arg4;
- (id)initWithLogFileDirectoryPath:(id)arg1 error:(id *)arg2;
- (id)initWithLogFileDirectoryPath:(id)arg1;
- (id)initWithOutError:(id *)arg1;
- (id)init;
- (void)dealloc;
- (void)outputLogData:(id)arg1;
- (void)fileOutputEventFailed:(int)arg1 info:(id)arg2 error:(id)arg3;
- (void)fileOutputEventFinished:(int)arg1 info:(id)arg2;
- (void)fileOutputEventBegan:(int)arg1 info:(id)arg2;
- (void)_writeStartupTimestampInfo;
- (void)writeString:(id)arg1;
- (void)writeData:(id)arg1;
- (void)writeNewline;
- (void)writeByte:(BOOL)arg1;
- (void)writeBytes:(const char *)arg1 length:(unsigned long)arg2;
- (id)_logFiles;
- (BOOL)_purgeOldLogsIfNeeded;
- (BOOL)_rolloverIfNeeded;

@end

