//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "T1ProfileViewControllerDataSourceDeferredAPIRequestSupport.h"

@class NSMutableArray, NSMutableSet, NSString, TFNTwitterAccount, TFNTwitterEntitySet, TFNTwitterEntityURL, TFNTwitterPreviewImageList, TFNTwitterUser, UIImage;

__attribute__((visibility("hidden")))
@interface T1LegacyProfileViewControllerUserDataSource : NSObject <T1ProfileViewControllerDataSourceDeferredAPIRequestSupport>
{
    TFNTwitterUser *_user;
    int _userError;
    double _lastRefreshTime;
    UIImage *_headerImage;
    UIImage *_bannerImage;
    NSString *_profileBannerURL;
    BOOL _forMyOwnProfile;
    NSMutableArray *_deferredAPIRequestBlocks;
    NSMutableSet *_pendingDeletedStatusIDs;
    CDUnknownBlockType _pendingUserTimelineRequestBlock;
    BOOL _abbreviatedTweetListIsReady;
    BOOL _abbreviatedSimilarUserListIsReady;
    BOOL _userIsReady;
    BOOL _loadedOnce;
    BOOL _previewImageListIsReady;
    BOOL _followRequestIsBeingSent;
    BOOL _hasPendingFollowerRequest;
    BOOL _observingAccountNotifications;
    BOOL _observingTweetAndDirectMessageNotifications;
    BOOL _observingUserNotifications;
    BOOL _observingProfileBannerNotifications;
    BOOL _cachedTweetsLoaded;
    BOOL _deferringAPIRequests;
    CDUnknownBlockType _dataSourceWasInvalidatedBlock;
    CDUnknownBlockType _photoTappedBlock;
    NSMutableArray *_abbreviatedTweetList;
    NSMutableArray *_abbreviatedSimilarUserList;
    NSMutableArray *_clusterRecommendations;
    NSString *_recommendation;
    id <TFNTwitterStatusSocialContext> _socialContext;
    TFNTwitterAccount *_account;
    TFNTwitterPreviewImageList *_previewImageList;
    int _followerRequestsCount;
}

@property(nonatomic, getter=isDeferringAPIRequests) BOOL deferringAPIRequests; // @synthesize deferringAPIRequests=_deferringAPIRequests;
@property(readonly, nonatomic) NSMutableArray *deferredAPIRequestBlocks; // @synthesize deferredAPIRequestBlocks=_deferredAPIRequestBlocks;
@property(nonatomic) BOOL cachedTweetsLoaded; // @synthesize cachedTweetsLoaded=_cachedTweetsLoaded;
@property(nonatomic, getter=isObservingProfileBannerNotifications) BOOL observingProfileBannerNotifications; // @synthesize observingProfileBannerNotifications=_observingProfileBannerNotifications;
@property(nonatomic, getter=isObservingUserNotifications) BOOL observingUserNotifications; // @synthesize observingUserNotifications=_observingUserNotifications;
@property(nonatomic, getter=isObservingTweetAndDirectMessageNotifications) BOOL observingTweetAndDirectMessageNotifications; // @synthesize observingTweetAndDirectMessageNotifications=_observingTweetAndDirectMessageNotifications;
@property(nonatomic, getter=isObservingAccountNotifications) BOOL observingAccountNotifications; // @synthesize observingAccountNotifications=_observingAccountNotifications;
@property(nonatomic) BOOL hasPendingFollowerRequest; // @synthesize hasPendingFollowerRequest=_hasPendingFollowerRequest;
@property(nonatomic) int followerRequestsCount; // @synthesize followerRequestsCount=_followerRequestsCount;
@property(nonatomic) BOOL followRequestIsBeingSent; // @synthesize followRequestIsBeingSent=_followRequestIsBeingSent;
@property(readonly, nonatomic) TFNTwitterPreviewImageList *previewImageList; // @synthesize previewImageList=_previewImageList;
@property(nonatomic) BOOL previewImageListIsReady; // @synthesize previewImageListIsReady=_previewImageListIsReady;
@property(nonatomic) BOOL loadedOnce; // @synthesize loadedOnce=_loadedOnce;
@property(nonatomic) BOOL userIsReady; // @synthesize userIsReady=_userIsReady;
@property(readonly, nonatomic) TFNTwitterAccount *account; // @synthesize account=_account;
@property(retain, nonatomic) id <TFNTwitterStatusSocialContext> socialContext; // @synthesize socialContext=_socialContext;
@property(copy, nonatomic) NSString *magicRecRecommendationText; // @synthesize magicRecRecommendationText=_recommendation;
@property(retain, nonatomic) NSMutableArray *clusterRecommendations; // @synthesize clusterRecommendations=_clusterRecommendations;
@property(readonly, nonatomic) NSMutableArray *abbreviatedSimilarUserList; // @synthesize abbreviatedSimilarUserList=_abbreviatedSimilarUserList;
@property(nonatomic) BOOL abbreviatedSimilarUserListIsReady; // @synthesize abbreviatedSimilarUserListIsReady=_abbreviatedSimilarUserListIsReady;
@property(readonly, nonatomic) NSMutableArray *abbreviatedTweetList; // @synthesize abbreviatedTweetList=_abbreviatedTweetList;
@property(nonatomic) BOOL abbreviatedTweetListIsReady; // @synthesize abbreviatedTweetListIsReady=_abbreviatedTweetListIsReady;
@property(copy, nonatomic) CDUnknownBlockType photoTappedBlock; // @synthesize photoTappedBlock=_photoTappedBlock;
@property(copy, nonatomic) CDUnknownBlockType dataSourceWasInvalidatedBlock; // @synthesize dataSourceWasInvalidatedBlock=_dataSourceWasInvalidatedBlock;
- (void).cxx_destruct;
- (void)updateFollowRequestPending:(BOOL)arg1;
- (id)_transitioningUserValueForKeyPath:(id)arg1;
- (void)_followerRequestsDidUpdate;
- (void)reloadRelationship;
- (BOOL)allDataIsReady;
- (void)clearPreviewImageListErrorURLs;
- (BOOL)previewImageListHasErrorURLs;
- (BOOL)isMediaSensitive;
- (unsigned int)previewImageListCount;
@property(readonly, nonatomic, getter=isUserRelationshipReady) BOOL userRelationshipReady;
- (BOOL)isUserViewingTheirOwnProfile;
@property(readonly, nonatomic) int userError;
@property(retain, nonatomic) TFNTwitterUser *user;
@property(readonly, nonatomic) TFNTwitterAccount *viewingAccount;
@property(nonatomic) BOOL blockedByYou;
@property(readonly, nonatomic) BOOL followRequestSent;
@property(readonly, nonatomic) BOOL isTwitterAlertsInstitution;
@property(readonly, nonatomic) BOOL isTwitterAlertsActivatedByYou;
@property(readonly, nonatomic) BOOL isFavoriteFollowing;
@property(readonly, nonatomic) BOOL isDeviceFollowing;
@property(readonly, nonatomic, getter=isFollowedByYou) BOOL followedByYou;
@property(readonly, nonatomic) BOOL doesFollowYou;
@property(readonly, nonatomic) int dmUnreadCount;
@property(readonly, nonatomic) int tweetCount;
@property(readonly, nonatomic) int followerCount;
@property(readonly, nonatomic) int followingCount;
@property(readonly, nonatomic) TFNTwitterEntityURL *entityURL;
@property(readonly, nonatomic) NSString *URL;
@property(readonly, nonatomic) TFNTwitterEntitySet *bioEntities;
@property(readonly, nonatomic) NSString *bio;
@property(readonly, nonatomic, getter=isDirectMessageAllowed) BOOL directMessageAllowed;
@property(readonly, nonatomic) BOOL isProtectedAccount;
@property(readonly, nonatomic) BOOL isVerifiedAccount;
@property(readonly, nonatomic) NSString *location;
@property(readonly, nonatomic) NSString *fullName;
@property(readonly, nonatomic) UIImage *bannerImage;
@property(readonly, nonatomic) UIImage *avatarImage;
@property(readonly, nonatomic) NSString *username;
- (void)_statusStreamDidUpdate:(id)arg1;
- (void)_accountSettingsDidUpdate:(id)arg1;
- (void)_accountSettingsPropertyDidChange:(id)arg1;
- (void)_accountDidUpdateDrafts:(id)arg1;
- (void)_accountDidUpdate:(id)arg1;
- (void)_recommendedUserDidUpdate;
- (void)_relationshipStatusDidUpdate:(id)arg1;
- (void)_userTweetDidUnretweet:(id)arg1;
- (void)_userTweetDidDelete:(id)arg1;
- (void)_userTweetWillDelete:(id)arg1;
- (void)_userTweetDidRetweet:(id)arg1;
- (void)_userTweetDidSend:(id)arg1;
- (void)_directMessagesDidUpdate;
- (void)_userDidUpdateProfileBannerImage:(id)arg1;
- (void)_userDidUpdateProfileImage:(id)arg1;
- (void)_userDidUpdate:(id)arg1;
- (void)_stopObservingProfileBannerNotifications;
- (void)_startObservingProfileBannerNotifications;
- (void)_stopObservingUserNotifications;
- (void)_startObservingUserNotifications;
- (void)_stopObservingTweetAndDirectMessageNotifications;
- (void)_startObservingTweetAndDirectMessageNotifications;
- (void)_stopObservingAccountNotifications;
- (void)_startObservingAccountNotifications;
- (void)stopDeferringAPIRequests;
- (void)startDeferringAPIRequests;
- (void)_sendPartialUserRequests:(BOOL)arg1 requestSimilarUsers:(BOOL)arg2;
- (void)_sendNonPartialUserRequests:(BOOL)arg1 requestSimilarUsers:(BOOL)arg2;
- (void)_receiveUserTimelineResponseWithSuccess:(BOOL)arg1 result:(id)arg2 error:(id)arg3 reload:(BOOL)arg4;
- (void)_receiveRecommendationsForUsersSimilarToUserResponseWithSuccess:(BOOL)arg1 result:(id)arg2 error:(id)arg3;
- (void)_receiveUserResponseWithSuccess:(BOOL)arg1 result:(id)arg2 error:(id)arg3;
- (void)_receiveMediaTimelineResponseWithSuccess:(BOOL)arg1 result:(id)arg2 error:(id)arg3 reload:(BOOL)arg4;
- (void)_requestUserWithUserID:(id)arg1 username:(id)arg2;
- (void)_requestAccountCredentialsVerification;
- (void)_requestMediaTimelineForUserID:(id)arg1 username:(id)arg2 reloading:(BOOL)arg3;
- (void)_requestRecommendationsForUsersSimilarToUserID:(id)arg1 username:(id)arg2;
- (void)_requestUserTimelineForUserID:(id)arg1 username:(id)arg2 reloading:(BOOL)arg3;
- (BOOL)_abbreviatedTweetListIsEqualToTweetList:(id)arg1;
- (BOOL)_loadTweetsFromDatabase;
- (void)_loadData:(BOOL)arg1 lastError:(int)arg2;
- (void)_invalidateForReason:(int)arg1;
- (double)_refreshTimeDelay;
- (void)invalidateData;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 twitterUser:(id)arg2 forMyOwnProfile:(BOOL)arg3;
- (id)initWithAccount:(id)arg1 twitterUser:(id)arg2;

@end

