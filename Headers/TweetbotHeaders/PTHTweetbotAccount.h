/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "NSCoding.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSMutableDictionary, NSMutableArray, NSArray, PTHTweetbotAccountSettings, NSTimer, NSMapTable, NSNumber, PTHTweetbotCurrentUser, NSObject, NSString, NSDateFormatter, PTHTweetbotTrendPlace, PTHTweetbotUserCache, PTHTweetbotStreamingController;
@protocol OS_dispatch_queue;

@interface PTHTweetbotAccount : XXUnknownSuperclass <NSCoding> {
	NSDateFormatter* _dateFormatter;
	NSDateFormatter* _searchDateFormatter;
	long long _tid;
	PTHTweetbotCurrentUser* _currentUser;
	NSMapTable* _userMapTable;
	NSMapTable* _statusMapTable;
	NSMutableArray* _savingBlocks;
	NSTimer* _saveTimer;
	NSMutableArray* _postDrafts;
	BOOL _postDraftsDirty;
	BOOL _loggedIn;
	unsigned _unauthorizedCount;
	BOOL _isVerifyingAuthentication;
	PTHTweetbotUserCache* _userCache;
	PTHTweetbotStreamingController* _streamingController;
	NSObject<OS_dispatch_queue>* _accountQueue;
	PTHTweetbotAccountSettings* _settings;
	NSMutableDictionary* _rateLimits;
	BOOL _directMessageAccess;
	BOOL _dirty;
	BOOL _saving;
	BOOL _deleted;
	BOOL _userNeedsReset;
	BOOL _invalidCredentials;
	NSString* _username;
	NSString* _token;
	NSString* _tokenSecret;
	NSString* _consumerKey;
	NSString* _consumerSecret;
}
@property(assign, nonatomic) BOOL invalidCredentials;
@property(assign, nonatomic) BOOL userNeedsReset;
@property(assign, nonatomic, getter=isDeleted) BOOL deleted;
@property(assign, nonatomic, getter=isSaving) BOOL saving;
@property(readonly, assign, nonatomic) NSObject<OS_dispatch_queue>* accountQueue;
@property(readonly, assign, nonatomic) BOOL isStreaming;
@property(assign, nonatomic, getter=isDirty) BOOL dirty;
@property(readonly, assign, nonatomic) PTHTweetbotAccountSettings* settings;
@property(readonly, assign, nonatomic) NSArray* loadedHashtags;
@property(readonly, assign, nonatomic) NSArray* postDrafts;
@property(readonly, copy, nonatomic) NSArray* loadedStatuses;
@property(readonly, copy, nonatomic) NSArray* loadedUsers;
@property(copy, nonatomic) NSString* consumerSecret;
@property(copy, nonatomic) NSString* consumerKey;
@property(readonly, assign, nonatomic) PTHTweetbotUserCache* userCache;
@property(readonly, assign, nonatomic) NSString* accountDirectory;
@property(copy, nonatomic) NSString* tokenSecret;
@property(copy, nonatomic) NSString* token;
@property(assign, nonatomic, getter=hasDirectMessageAccess) BOOL directMessageAccess;
@property(readonly, assign, nonatomic) NSDateFormatter* searchDateFormatter;
@property(readonly, assign, nonatomic) NSDateFormatter* dateFormatter;
@property(retain, nonatomic) PTHTweetbotCurrentUser* currentUser;
@property(readonly, copy, nonatomic) NSString* keyValueStorePrefix;
@property(readonly, copy, nonatomic) NSString* keychainServiceName;
@property(readonly, assign, nonatomic) NSNumber* tidValue;
@property(assign, nonatomic) long long tid;
@property(copy, nonatomic) NSString* username;
@property(copy, nonatomic) PTHTweetbotTrendPlace* selectedTrendPlace;
+(void)verifyCredentials:(id)credentials tokenSecret:(id)secret consumerKey:(id)key consumerSecret:(id)secret4 completion:(id)completion;
+(void)updateServerTimeOffset:(id)offset;
+(void)_setServerTimeOffset:(id)offset;
+(id)serverDateFormatter;
+(void)createTokenRequest:(id)request mode:(BOOL)mode completion:(id)completion;
+(id)deleteRequest:(id)request;
+(id)postRequest:(id)request;
+(id)getRequest:(id)request;
+(id)consumerSecret;
+(id)consumerKey;
+(void)setCustomConsumerSecret:(id)secret;
+(id)customConsumerSecret;
+(void)setCustomConsumerKey:(id)key;
+(id)customConsumerKey;
+(void)initialize;
+(void)moveAccountAtIndex:(unsigned)index toIndex:(unsigned)index2;
+(void)removeAccount:(id)account;
+(void)insertAccount:(id)account atIndex:(unsigned)index;
+(id)accountWithUsername:(id)username;
+(id)accountWithTID:(long long)tid;
+(id)accounts;
+(void)willTerminate;
+(id)_accounts;
+(void)_migrateIfNeeded;
+(void)_saveAccountTIDs;
+(id)accountDirectoryForTIDValue:(id)tidvalue;
+(void)requestACAccounts:(id)accounts;
+(void)addACAccountsIfNeeded:(id)needed;
+(void)addACAccount:(id)account store:(id)store completion:(id)completion;
+(void)_reverseAuth:(id)auth store:(id)store completion:(id)completion;
-(void).cxx_destruct;
-(void)dealloc;
-(id)description;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)deletePostDraft:(id)draft;
-(void)removePostDraft:(id)draft;
-(void)addPostDraft:(id)draft;
-(void)_setPostDraftsDirty;
-(void)deletePostDrafts;
-(void)saveAccountData;
-(void)savePostDrafts;
-(void)_loadPostDrafts;
-(id)_postDraftsPath;
-(id)rateLimitForPath:(id)path;
-(void)stopStreaming;
-(void)startStreaming;
-(id)mobilizer;
-(id)movieUploader;
-(id)imageUploader;
-(id)urlShortner;
-(id)bookmarker;
-(void)resetCaches;
-(id)statusWithDictionary:(id)dictionary;
-(id)statusWithTID:(long long)tid;
-(void)setStatus:(id)status forTID:(long long)tid;
-(id)findStatusWithTID:(long long)tid;
-(id)userWithDictionary:(id)dictionary updatedAt:(id)at;
-(id)userWithScreenName:(id)screenName;
-(id)findUserWithScreenName:(id)screenName;
-(id)userWithTID:(long long)tid;
-(id)findUserWithTID:(long long)tid;
-(void)setUser:(id)user forTID:(long long)tid;
-(void)delete;
-(void)saveForTimer:(id)timer;
-(void)saveForBackground;
-(void)_saveCurrentUser;
-(void)sendRequest:(id)request progress:(id)progress handleResponse:(id)response;
-(void)sendRequest:(id)request handleResponse:(id)response;
-(void)_sendRequest:(id)request progress:(id)progress handleResponse:(id)response;
-(void)_verifyAndReauthIfNeeded;
-(id)oAuthEchoHeader;
-(id)_currentUserPath;
-(id)initWithTID:(long long)tid;
-(id)init;
-(id)deleteRequest:(id)request;
-(id)postRequest:(id)request;
-(id)getRequest:(id)request;
-(void)updateCredentials:(id)credentials directMessageAccess:(BOOL)access;
-(id)newAccountKeychainItem;
-(void)reauthenticateViaAC:(id)ac;
-(void)addToACAccountStore:(id)acaccountStore;
-(void)loadTrendPlaces:(id)places;
@end

