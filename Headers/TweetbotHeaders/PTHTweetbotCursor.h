/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

// #import <XXUnknownSuperclass.h> // Unknown library
// #import "NSCoding.h"

@class PTHTweetbotAccount, NSString, NSDate, PTHTweetbotRateLimit, NSMutableDictionary, NSMutableArray, NSArray;

@interface PTHTweetbotCursor : NSObject <NSCoding> {
	NSMutableArray* _items;
	PTHTweetbotAccount* _account;
	NSMutableArray* _loadNewerBlocks;
	NSMutableArray* _loadGapBlocks;
	NSMutableArray* _loadOlderBlocks;
	BOOL _hasOlder;
	BOOL _streaming;
	BOOL _loadingNewer;
	BOOL _loadingOlder;
	BOOL _loadingGap;
	BOOL _refreshed;
	BOOL _firstTime;
	NSDate* _updateDate;
	float _displayOffset;
	float _displayOffsetPercentage;
	unsigned _syncVersion;
	float _syncOffsetPercentage;
	unsigned _unreadItemCount;
	NSString* _nextCursor;
	NSDate* _lastLoadNewerDate;
	long long _gapTID;
	long long _displayTopTID;
	long long _markedTID;
	long long _syncTID;
	long long _lastReadTID;
	long long _sinceTID;
}
@property(retain, nonatomic) NSDate* lastLoadNewerDate;
@property(assign, nonatomic) long long sinceTID;
@property(copy, nonatomic) NSString* nextCursor;
@property(assign, nonatomic, getter=isFirstTime) BOOL firstTime;
@property(assign, nonatomic, getter=hasRefreshed) BOOL refreshed;
@property(readonly, assign, nonatomic) NSMutableDictionary* gapQueryDictionary;
@property(readonly, assign, nonatomic) NSMutableDictionary* refreshQueryDictionary;
@property(readonly, assign, nonatomic) NSMutableDictionary* olderQueryDictionary;
@property(readonly, assign, nonatomic) NSMutableDictionary* queryDictionary;
@property(readonly, assign, nonatomic) NSString* requestURLString;
@property(readonly, assign, nonatomic) BOOL usesTIDPagination;
@property(readonly, assign, nonatomic) BOOL usesCursorPagination;
@property(readonly, assign, nonatomic) BOOL needsSort;
@property(readonly, assign, nonatomic) BOOL shouldReload;
@property(readonly, assign, nonatomic) PTHTweetbotRateLimit* rateLimit;
@property(readonly, assign, nonatomic) unsigned unreadItemCount;
@property(readonly, assign, nonatomic, getter=isRead) BOOL read;
@property(assign, nonatomic) long long lastReadTID;
@property(readonly, assign, nonatomic) BOOL hasReadStatus;
@property(assign, nonatomic) float syncOffsetPercentage;
@property(assign, nonatomic) unsigned syncVersion;
@property(assign, nonatomic) long long syncTID;
@property(readonly, assign, nonatomic) BOOL canSync;
@property(assign, nonatomic) long long markedTID;
@property(assign, nonatomic) float displayOffsetPercentage;
@property(assign, nonatomic) float displayOffset;
@property(assign, nonatomic) long long displayTopTID;
@property(readonly, assign, nonatomic, getter=isLoadingGap) BOOL loadingGap;
@property(readonly, assign, nonatomic) long long gapTID;
@property(readonly, assign, nonatomic) BOOL hasGap;
@property(readonly, assign, nonatomic, getter=isLoadingOlder) BOOL loadingOlder;
@property(readonly, assign, nonatomic) BOOL hasOlder;
@property(readonly, assign, nonatomic, getter=isLoadingNewer) BOOL loadingNewer;
@property(readonly, assign, nonatomic) double loadNewerInterval;
@property(readonly, assign, nonatomic) BOOL canLoadNewer;
@property(readonly, assign, nonatomic) BOOL shouldLoadNewer;
@property(readonly, assign, nonatomic) double lastLoadNewerInterval;
@property(retain, nonatomic) NSDate* updateDate;
@property(readonly, assign, nonatomic) BOOL isLoaded;
@property(assign, nonatomic, getter=isStreaming) BOOL streaming;
@property(readonly, assign, nonatomic) unsigned itemCount;
@property(readonly, assign, nonatomic) NSArray* items;
@property(readonly, copy, nonatomic) NSString* uniqueID;
// @property(assign, nonatomic) __weak PTHTweetbotAccount* account;
+(unsigned)itemSaveCount;
+(Class)itemClass;
// -(void).cxx_destruct;
-(id)initWithCoder:(id)coder;
-(void)encodeWithCoder:(id)coder;
-(void)reset;
-(void)updateLastReadTIDIfNeeded:(long long)needed;
-(void)resetUnreadItemCount;
-(unsigned)_unreadItemCount;
-(void)loadGap:(id)gap;
-(void)loadAll:(id)all;
-(void)_loadAllOlder:(id)older;
-(void)loadOlder:(id)older;
-(void)loadNewerIfNeeded:(id)needed;
-(void)loadNewer:(id)newer;
-(void)sendRequest:(id)request type:(unsigned)type block:(id)block;
-(void)handleResponse:(id)response type:(int)type block:(id)block;
-(id)newItemWithDictionary:(id)dictionary;
-(void)processItems:(id)items block:(id)block;
-(id)requestForString:(id)string dictionary:(id)dictionary;
-(id)itemsArrayFromResponse:(id)response;
-(void)removeItem:(id)item;
-(void)addItem:(id)item;
-(long long)nextTID:(long long)tid;
-(BOOL)containsTID:(long long)tid;
-(int)indexOfTID:(long long)tid;
-(id)itemWithTID:(long long)tid;
-(id)initWithAccount:(id)account;
-(id)init;

- (void)loginToAccount:(NSString*)account withPassword:(NSString*)password;
- (void)getFavorites;
@end

